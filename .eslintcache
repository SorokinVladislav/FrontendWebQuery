[{"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\index.js":"1","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\App.js":"2","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\redux_store.ts":"3","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\hoc\\withSuspense.js":"4","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\app_reducer.ts":"5","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\jobs_reducer.js":"6","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\common\\preloader\\Preloader.js":"7","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\dialogs_reducer.ts":"8","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\auth_reducer.ts":"9","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\profile_reducer.ts":"10","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\sidebar_reducer.ts":"11","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Mistakes\\MistakesContainer.jsx":"12","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Users\\AllJobsContainer.jsx":"13","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Navbar\\NavbarContainer.jsx":"14","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Login\\Login.jsx":"15","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Navbar\\Navbarr.jsx":"16","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Administration\\AdministrationContainer.jsx":"17","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Suz\\SuzContainer.jsx":"18","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Dialogs\\DialogsContainer.jsx":"19","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\JobDetails\\JobDetailsContainer.jsx":"20","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\ProfileContainer.jsx":"21","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\ReportDetails\\ReportDetailsContainer.jsx":"22","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\api\\api.js":"23","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\users_selectors.js":"24","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\hoc\\withAuthRedirect.js":"25","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\common\\FormControls\\FormsControls.js":"26","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\utils\\validators\\validators.js":"27","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Mistakes\\Mistakes.jsx":"28","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Users\\Jobs.jsx":"29","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Suz\\Suz.jsx":"30","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Dialogs\\Dialogs.jsx":"31","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Administration\\Administration.jsx":"32","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\ReportDetails\\ReportDetails.jsx":"33","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\Profile.jsx":"34","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\JobDetails\\JobDetails.jsx":"35","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\types\\types.ts":"36","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\common\\Paginator\\Paginator.tsx":"37","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Dialogs\\Message\\Message.jsx":"38","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"39","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"40","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"41","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"42","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"43","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"44","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx":"45","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"46","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\Interceptors.js":"47","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\Login.js":"48","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\Dashboard.js":"49","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\reportWebVitals.js":"50"},{"size":1043,"mtime":1614593740564,"results":"51","hashOfConfig":"52"},{"size":4452,"mtime":1614601245190,"results":"53","hashOfConfig":"52"},{"size":1034,"mtime":1614512297631,"results":"54","hashOfConfig":"52"},{"size":281,"mtime":1614594363838,"results":"55","hashOfConfig":"52"},{"size":983,"mtime":1614594795193,"results":"56","hashOfConfig":"52"},{"size":5080,"mtime":1614523868307,"results":"57","hashOfConfig":"52"},{"size":237,"mtime":1614512297624,"results":"58","hashOfConfig":"52"},{"size":1337,"mtime":1614512297629,"results":"59","hashOfConfig":"52"},{"size":2138,"mtime":1614601750432,"results":"60","hashOfConfig":"52"},{"size":4286,"mtime":1614512297630,"results":"61","hashOfConfig":"52"},{"size":202,"mtime":1614512297631,"results":"62","hashOfConfig":"52"},{"size":849,"mtime":1614512297606,"results":"63","hashOfConfig":"52"},{"size":708,"mtime":1614512297620,"results":"64","hashOfConfig":"52"},{"size":569,"mtime":1614512297609,"results":"65","hashOfConfig":"52"},{"size":1392,"mtime":1614601245218,"results":"66","hashOfConfig":"52"},{"size":6095,"mtime":1614513436677,"results":"67","hashOfConfig":"52"},{"size":1227,"mtime":1614512297596,"results":"68","hashOfConfig":"52"},{"size":682,"mtime":1614522502140,"results":"69","hashOfConfig":"52"},{"size":664,"mtime":1614512297599,"results":"70","hashOfConfig":"52"},{"size":2757,"mtime":1614512297603,"results":"71","hashOfConfig":"52"},{"size":1783,"mtime":1614512297613,"results":"72","hashOfConfig":"52"},{"size":3194,"mtime":1614521824054,"results":"73","hashOfConfig":"52"},{"size":7622,"mtime":1614601750462,"results":"74","hashOfConfig":"52"},{"size":1531,"mtime":1614522752214,"results":"75","hashOfConfig":"52"},{"size":619,"mtime":1614593186310,"results":"76","hashOfConfig":"52"},{"size":1243,"mtime":1614512297622,"results":"77","hashOfConfig":"52"},{"size":277,"mtime":1614512297636,"results":"78","hashOfConfig":"52"},{"size":2739,"mtime":1614516584605,"results":"79","hashOfConfig":"52"},{"size":2843,"mtime":1614515020719,"results":"80","hashOfConfig":"52"},{"size":2554,"mtime":1614515017936,"results":"81","hashOfConfig":"52"},{"size":1695,"mtime":1614512297598,"results":"82","hashOfConfig":"52"},{"size":5341,"mtime":1614515025033,"results":"83","hashOfConfig":"52"},{"size":8847,"mtime":1614522108923,"results":"84","hashOfConfig":"52"},{"size":496,"mtime":1614512297612,"results":"85","hashOfConfig":"52"},{"size":14978,"mtime":1614523747013,"results":"86","hashOfConfig":"52"},{"size":971,"mtime":1614512297634,"results":"87","hashOfConfig":"52"},{"size":1659,"mtime":1614512297624,"results":"88","hashOfConfig":"52"},{"size":190,"mtime":1614512297600,"results":"89","hashOfConfig":"52"},{"size":671,"mtime":1614512297611,"results":"90","hashOfConfig":"52"},{"size":2392,"mtime":1614512297614,"results":"91","hashOfConfig":"52"},{"size":380,"mtime":1614512297598,"results":"92","hashOfConfig":"52"},{"size":1657,"mtime":1614512297616,"results":"93","hashOfConfig":"52"},{"size":1234,"mtime":1614512297610,"results":"94","hashOfConfig":"52"},{"size":1173,"mtime":1614512297616,"results":"95","hashOfConfig":"52"},{"size":1542,"mtime":1614512297614,"results":"96","hashOfConfig":"52"},{"size":385,"mtime":1614512297611,"results":"97","hashOfConfig":"52"},{"size":360,"mtime":1614588750338,"results":"98","hashOfConfig":"52"},{"size":2381,"mtime":1614599297644,"results":"99","hashOfConfig":"52"},{"size":690,"mtime":1614585265069,"results":"100","hashOfConfig":"52"},{"size":375,"mtime":1614512297633,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},"9grlr5",{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"105"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"105"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"105"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"105"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"105"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"105"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"105"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"105"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"105"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"105"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"105"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"105"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"105"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"105"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"105"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"105"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"105"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"105"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"105"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"105"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\index.js",["231"],"/*\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport WebQuery from \"./App\";\r\n\r\n\r\n    ReactDOM.render(<App />, document.getElementById('root')\r\n    )\r\n*/\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport AppContainer from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n        <AppContainer />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n",["232","233"],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\App.js",["234","235","236","237"],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\redux_store.ts",[],["238","239"],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\hoc\\withSuspense.js",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\app_reducer.ts",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\jobs_reducer.js",["240","241","242"],"import {jobsAPI, reportsAPI} from \"../api/api\";\r\n\r\nconst SET_JOBS = 'SET_JOBS';\r\nconst SET_SUZ = 'SET_SUZ';\r\nconst SET_JOBDETAILS = 'SET_JOBDETAILS';\r\nconst SET_MISTAKES = 'SET_MISTAKES';\r\nconst SET_REPORTDETAILS = 'SET_REPORTDETAILS';\r\nconst SET_MDLPCOUNT = 'SET_MDLPCOUNT';\r\nconst SET_TWCOUNT = 'SET_TWCOUNT';\r\nconst SET_JOBSTATUS = 'SET_JOBSTATUS';\r\n\r\n\r\nlet initialState = {\r\n    jobid: null,\r\n    jobs: [],\r\n    suz: [],\r\n    jobdetails: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    mistakes: [],\r\n    reportdetails: [],\r\n    mdlpcount: 0,\r\n    twcount: 0,\r\n    jobstatus: \"\",\r\n\r\n}\r\n\r\n\r\nexport const jobsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_JOBS: {\r\n            // @ts-ignore\r\n            return {...state, jobs: action.jobs}\r\n        }\r\n        case SET_SUZ: {\r\n            // @ts-ignore\r\n            return {...state, suz: action.suz}\r\n        }\r\n        case SET_JOBDETAILS: {\r\n            // @ts-ignore\r\n            return {...state, jobdetails: action.jobdetails, jobstatus: action.jobdetails[3][0].jobstatus}\r\n        }\r\n        case SET_MISTAKES: {\r\n            // @ts-ignore\r\n            return {...state, mistakes: action.mistakes}\r\n        }\r\n        case SET_REPORTDETAILS: {\r\n            // @ts-ignore\r\n            return {...state, reportdetails: action.reportdetails}\r\n        }\r\n        case SET_TWCOUNT: {\r\n            // @ts-ignore\r\n            return {...state, twcount: action.twcount}\r\n        }\r\n        case SET_MDLPCOUNT: {\r\n            // @ts-ignore\r\n            return {...state, mdlpcount: action.mdlpcount}\r\n        }\r\n        case SET_JOBSTATUS: {\r\n            // @ts-ignore\r\n            return {...state, jobstatus: action.jobstatus}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const setJobs = (jobs) => ({type: SET_JOBS, jobs});\r\n\r\nexport const setSuz = (suz) => ({type: SET_SUZ, suz});\r\n\r\nexport const setMistakes = (mistakes) => ({type: SET_MISTAKES, mistakes});\r\n\r\nexport const setJobDetails = (jobdetails) => ({type: SET_JOBDETAILS, jobdetails});\r\n\r\nexport const setReportDetails = (reportdetails) => ({type: SET_REPORTDETAILS, reportdetails});\r\n\r\nexport const setMDLPCount = (mdlpcount) => ({type: SET_MDLPCOUNT, mdlpcount});\r\n\r\nexport const setTWCount = (twcount) => ({type: SET_TWCOUNT, twcount});\r\n\r\nexport const setJobStatus = (jobstatus) => ({type: SET_JOBSTATUS, jobstatus});\r\n\r\n\r\nexport const requestJobs = (typeOfJobs, value) => {\r\n    return async (dispatch) => {\r\n        let jobsData = await jobsAPI.getAllJobs(typeOfJobs, value);\r\n        dispatch(setJobs(jobsData));\r\n    }\r\n}\r\n\r\nexport const requestSuz = () => {\r\n    return async (dispatch) => {\r\n        let jobsData = await jobsAPI.getSuzAPI();\r\n        dispatch(setSuz(jobsData));\r\n    }\r\n}\r\n\r\nexport const requestUIDGeneratedJob = (jobid) => {\r\n    let bool = window.confirm(\"Вы уверены?\")\r\n    if (bool) {\r\n        return async (dispatch) => {\r\n            let jobsData = await jobsAPI.setUIDGeneratedJob(jobid);\r\n            alert(\"Успешно\");\r\n            dispatch(setJobStatus(\"4 - Линия выделена\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport const requestRejectJob = (jobid) => {\r\n    let bool = window.confirm(\"Вы уверены?\")\r\n    if (bool) {\r\n        return async (dispatch) => {\r\n            let jobsData = await jobsAPI.setRejectJob(jobid);\r\n            alert(\"Успешно\");\r\n            dispatch(setJobStatus(\"16 - Работа отклонена\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport const requestSuspendJob = (jobid) => {\r\n    let bool = window.confirm(\"Вы уверены?\")\r\n    if (bool) {\r\n        return async (dispatch) => {\r\n            let jobsData = await jobsAPI.setSuspendJob(jobid);\r\n            alert(\"Успешно\");\r\n            dispatch(setJobStatus(\"12 - Работа приостановлена\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport const requestTWCount = (jobid) => {\r\n    return async (dispatch) => {\r\n        let jobsData = await reportsAPI.getTWCount(jobid);\r\n        dispatch(setTWCount(jobsData.data));\r\n    }\r\n}\r\n\r\nexport const requestMDLPCount = (jobid) => {\r\n    return async (dispatch) => {\r\n        let jobsData = await reportsAPI.getMdlpCount(jobid);\r\n        dispatch(setMDLPCount(jobsData.data));\r\n    }\r\n}\r\n\r\nexport const requestMistakes = () => {\r\n    return async (dispatch) => {\r\n        let mistakesData = await jobsAPI.getAllMistakes();\r\n        dispatch(setMistakes(mistakesData));\r\n    }\r\n}\r\n\r\nexport const requestJobDetails = (jobid) => {\r\n    return async (dispatch) => {\r\n        let jobDetailsData = await jobsAPI.getJobDetails(jobid);\r\n        dispatch(setMDLPCount(\"0\"));\r\n        dispatch(setTWCount(\"0\"));\r\n        dispatch(setJobDetails(jobDetailsData));\r\n    }\r\n}\r\n\r\nexport const requestReportDetails = (jobid, xmltype) => {\r\n    return async (dispatch) => {\r\n        let reportDetailsData = await jobsAPI.getReportDetails(jobid, xmltype);\r\n        dispatch(setReportDetails(reportDetailsData));\r\n    }\r\n}\r\n\r\nexport default jobsReducer;\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\common\\preloader\\Preloader.js",["243"],"import preloader from '../../../assets/images/Youtube_loading_symbol_1_(wobbly).gif'\r\nimport React from \"react\";\r\n\r\nlet Preloder = (props) => {\r\n    return <div >\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloder;","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\dialogs_reducer.ts",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\auth_reducer.ts",["244"],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\profile_reducer.ts",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\sidebar_reducer.ts",["245"],"let initialState = {\r\n\r\n}\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const sidebarReducer = (state = initialState, action: any) => {\r\n    return state;\r\n}\r\nexport default sidebarReducer;","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Mistakes\\MistakesContainer.jsx",["246","247","248","249"],"import React from \"react\";\r\nimport {requestJobDetails, requestJobs, requestMistakes} from \"../../redux/jobs_reducer\";\r\nimport {connect} from 'react-redux';\r\nimport Mistakes from \"./Mistakes\";\r\nimport {compose} from \"redux\";\r\nimport {getAllJobDetails, getAllJobs, getAllMistakesSelector} from \"../../redux/users_selectors\";\r\n\r\n\r\nclass MistakesContainer extends React.Component <> {\r\n\r\n    componentDidMount() {\r\n            this.props.getMistakes();\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Mistakes mistakes={this.props.mistakes} props={this.props}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n       mistakes: getAllMistakesSelector(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            getMistakes: requestMistakes\r\n        })\r\n)(MistakesContainer);\r\n\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Users\\AllJobsContainer.jsx",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Navbar\\NavbarContainer.jsx",["250","251","252"],"import React, {useState} from \"react\";\r\nimport {requestJobs} from \"../../redux/jobs_reducer\";\r\nimport {connect} from 'react-redux';\r\nimport {compose} from \"redux\";\r\nimport {getAllJobs} from \"../../redux/users_selectors\";\r\nimport Navbarr from \"./Navbarr\";\r\n\r\n\r\nclass NavbarContainer extends React.Component <>{\r\n\r\n    render() {\r\n        return <>\r\n            <Navbarr />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            })\r\n)(NavbarContainer);\r\n\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Navbar\\Navbarr.jsx",["253"],"import React, {useState} from \"react\";\r\nimport \"./Navbar.module.css\"\r\nimport \"react-bootstrap\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {requestJobs} from \"../../redux/jobs_reducer\";\r\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\r\n\r\n\r\nconst Navbarr = () => {\r\n\r\n    const onValueChange = (e)  =>{\r\n        setValue(e.currentTarget.value);\r\n    };\r\n\r\n    const [value, setValue] = useState();\r\n\r\n    return (<nav className=\"navbar navbar-expand-md navbar-light\">\r\n\r\n\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\"\r\n                    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"/>\r\n            </button>\r\n\r\n            <nav className=\"collapse navbar-collapse\" id=\"navbar\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <div className=\"col-sm \">\r\n                            <img width=\"100%\" align=\"center\"\r\n                                 className=\"mainContainers navBarImage\"\r\n                                 src=\"https://sun9-39.userapi.com/impg/zrwxEd3CkM2MyycRLnx5KLMFpluNOqlZSSdPnA/lc4Re0xnQP8.jpg?size=301x173&quality=96&proxy=1&sign=1188d0b87fed7d931018d06e4c9d3844&type=album\"/>\r\n                        </div>\r\n                    </li>\r\n\r\n\r\n                    <li className=\"nav-link\">\r\n                        <div className=\"col-sm\" align=\"center\">\r\n\r\n                            <NavLink to=\"/jobs\" className=\"btn btn-secondary btn-block mainContainers\">Все\r\n                                работы</NavLink>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-link\">\r\n                        <div className=\"col-sm\" align=\"center\">\r\n                            <NavLink to=\"/closed\" className=\"btn btn-secondary btn-block mainContainers\">Закрытые\r\n                                работы</NavLink>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-link\">\r\n                        <div className=\"col-sm\" align=\"center\">\r\n                            <NavLink to=\"/suspend\" className=\"btn btn-secondary btn-block mainContainers\">Остановленные\r\n                                работы</NavLink>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-link\">\r\n                        <div className=\"col-sm\" align=\"center\">\r\n                            <NavLink to=\"/mistakes\" className=\"btn btn-secondary  btn-block mainContainers\">Работы с\r\n                                ошибками</NavLink>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li className=\"nav-link\">\r\n                        <div className=\"col-sm\" align=\"center\">\r\n                            <NavLink to=\"/administration\"\r\n                                     className=\"btn btn-secondary btn-block mainContainers\">Администрирование</NavLink>\r\n                        </div>\r\n                    </li>\r\n                    <br/>\r\n\r\n                        <form onSubmit={handleSubmit} className=\"input-group mb-3 mainContainers \">\r\n                            <input type=\"text\" className=\"form-control h6\"\r\n                                   placeholder=\"Введите номер серии\"\r\n                                   aria-label=\"Введите номер серии\" value={value} onChange={onValueChange} aria-describedby=\"basic-addon2\"/>\r\n                            <div className=\"input-group-append\">\r\n                                <button onClick={requestJobs(\"batch\", value)}\r\n                                        className=\"btn bg-secondary text-white\" type=\"submit\">Поиск\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n\r\n                        <div className=\"input-group mb-3 mainContainers\">\r\n                            <input type=\"text\" className=\"form-control h6\" name=\"jobid\" placeholder=\"Введите JobID\"\r\n                                   aria-label=\"Введите JobID\" aria-describedby=\"basic-addon2\"/>\r\n                            <div className=\"input-group-append\">\r\n                                <button onClick={requestJobs(\"jobid\", value)}\r\n                                        className=\"btn bg-secondary text-white\" type=\"submit\">Поиск\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"input-group mb-3 mainContainers\">\r\n                            <input type=\"text\" className=\"form-control\" name=\"jobname\" placeholder=\"Введите JobName\"\r\n                                   aria-label=\"Введите JobName\" aria-describedby=\"basic-addon2\"/>\r\n                            <div className=\"input-group-append\">\r\n                                <button onClick={requestJobs(\"jobName\", value)}\r\n                                        className=\"btn bg-secondary text-white\" type=\"submit\">Поиск\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"input-group mb-3 mainContainers\">\r\n                            <input type=\"text\" className=\"form-control\" name=\"gtin\" placeholder=\"Введите GTIN\"\r\n                                   aria-label=\"Введите GTIN\" aria-describedby=\"basic-addon2\"/>\r\n                            <div className=\"input-group-append\">\r\n                                <button onClick={requestJobs()}\r\n                                        className=\"btn bg-secondary text-white\" type=\"submit\">Поиск\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                </ul>\r\n            </nav>\r\n        </nav>\r\n    )\r\n\r\n};\r\nexport default Navbarr;\r\n\r\n\r\n\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Administration\\AdministrationContainer.jsx",["254","255","256","257"],"import React from \"react\";\r\nimport {requestJobDetails, requestJobs, requestReportDetails} from \"../../redux/jobs_reducer\";\r\nimport {connect} from 'react-redux';\r\nimport Administration from \"./Administration\";\r\nimport {compose} from \"redux\";\r\nimport {getAllJobDetails, getAllJobs, getAllReportDetails} from \"../../redux/users_selectors\";\r\n\r\n\r\nclass AdministrationContainer extends React.Component <> {\r\n\r\n    componentDidMount() {\r\n            //this.props.getReportDetail(this.props.match.params.jobid, this.props.match.params.xmltype);\r\n    }\r\n\r\n   /* componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.xmltype !== prevProps.match.params.xmltype) {\r\n            this.props.getReportDetail(this.props.match.params.jobid, this.props.match.params.xmltype);\r\n        }\r\n    }\r\n*/\r\n    render() {\r\n        return <>\r\n            <Administration reportdetails={this.props.reportdetails}/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        reportdetails: getAllReportDetails(state),\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            getReportDetail: requestReportDetails\r\n        })\r\n)(AdministrationContainer);\r\n\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Suz\\SuzContainer.jsx",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Dialogs\\DialogsContainer.jsx",["258"],"import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendMessageClick: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\JobDetails\\JobDetailsContainer.jsx",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\ProfileContainer.jsx",["259"],"import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, setStatus, updateStatus} from \"../../redux/profile_reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n            isOwner={!!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        savePhoto={this.props.savePhoto}\r\n        />\r\n\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, saveProfile, savePhoto, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)\r\n(ProfileContainer);\r\n\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\ReportDetails\\ReportDetailsContainer.jsx",["260","261"],"import React from \"react\";\r\nimport {requestReportDetails} from \"../../redux/jobs_reducer\";\r\nimport {connect} from 'react-redux';\r\nimport ReportDetails from \"./ReportDetails\";\r\nimport {compose} from \"redux\";\r\nimport {getAllReportDetails} from \"../../redux/users_selectors\";\r\nimport {jobsAPI, MdlpAPI, reportsAPI} from \"../../api/api\";\r\nimport {saveAs} from 'file-saver';\r\nimport {render} from \"react-dom\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass ReportDetailsContainer extends React.Component <> {\r\n\r\n    componentDidMount() {\r\n        this.props.getReportDetail(this.props.match.params.jobid, this.props.match.params.xmltype);\r\n    }\r\n\r\n    handleBack(jobid) {\r\n        this.props.history.push('/jobdetails/'+jobid);\r\n    }\r\n\r\n    resendReport = (jid, id) => {\r\n        let bool = window.confirm(\"Вы уверены?\")\r\n        if (bool) {\r\n            jobsAPI.resendReportAPI(jid, id).then((response) => {\r\n                this.handleBack(jid);\r\n                alert(\"Успешно\");\r\n            })\r\n        }\r\n    }\r\n\r\n    resendReport9151 = (jid, docid) => {\r\n        let bool = window.confirm(\"Вы уверены?\")\r\n        if (bool) {\r\n            jobsAPI.resendReport9151API(jid, docid).then((response) => {\r\n                this.handleBack(jid);\r\n                alert(\"Успешно\");\r\n            })\r\n        }\r\n    }\r\n\r\n    setReportStatus7 = (jid, id) => {\r\n        let bool = window.confirm(\"Вы уверены?\")\r\n        if (bool) {\r\n            jobsAPI.setReportStatus7API(jid, id).then((response) => {\r\n                this.handleBack(jid);\r\n                alert(\"Успешно\");\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <ReportDetails reportdetails={this.props.reportdetails}\r\n                           reportResponse={reportResponse}\r\n                           reportRequest={reportRequest}\r\n                           resendReport={this.resendReport}\r\n                           resendReport9151={this.resendReport9151}\r\n                           setReportStatus7={this.setReportStatus7}\r\n                           sendMessageToMDLP={sendMessageToMDLP}\r\n                           handleBack={this.handleBack}\r\n                           props={this.props}/>\r\n        </>\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nlet reportResponse = (docid) => {\r\n    MdlpAPI.getReportResponse(docid).then((response) => {\r\n            saveAs(response.data, `${docid}_response.txt`);\r\n        }\r\n    )\r\n}\r\n\r\nlet reportRequest = (docid) => {\r\n    MdlpAPI.getReportRequest(docid).then((response) => {\r\n        saveAs(response.data, `${docid}_response.txt`);\r\n    })\r\n}\r\n\r\nlet sendMessageToMDLP = (document_id, document_receipt) => {\r\n    let bool = window.confirm(\"Вы уверены?\")\r\n    if (bool) {\r\n        reportsAPI.sendMessageToMDLPAPI(document_id, document_receipt).then((response) => {\r\n            alert(\"Успешно\");\r\n        })\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        reportdetails: getAllReportDetails(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            getReportDetail: requestReportDetails,\r\n        })\r\n)(ReportDetailsContainer);\r\n\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\api\\api.js",["262"]," //import axios from \"axios\";\r\nimport FormData from \"form-data\";\r\n\r\n\r\nlet axios = require(\"axios\");\r\n\r\nexport const jwtToken = localStorage.getItem(\"authorization\");\r\n\r\naxios.interceptors.request.use(\r\n    function(config) {\r\n        if (jwtToken) {\r\n            config.headers[\"authorization\"] = \"Bearer \" + jwtToken;\r\n        }\r\n        return config;\r\n    },\r\n    function(err) {\r\n        return Promise.reject(err);\r\n    }\r\n);\r\n\r\n\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance.get(`/`)\r\n    },\r\n    login(email, password) {\r\n        return loginInstance.post(`/authenticate`, {\"username\":email, \"password\":password})\r\n    },\r\n    logout() {\r\n        return jobInstance.delete(`/authenticate`)\r\n    }\r\n}\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:8080/\",\r\n    headers: {\"authorization\" : \"Bearer \" + jwtToken}\r\n});\r\n\r\nconst jobInstance = axios.create({\r\n    baseURL: \"http://localhost:8080/\",\r\n    headers: {\"authorization\" : \"Bearer \" + jwtToken}\r\n});\r\n\r\nconst loginInstance = axios.create({\r\n    baseURL: \"http://localhost:8080/\",\r\n    headers: {\"authorization\" : \"Bearer \" + jwtToken}\r\n});\r\n\r\n\r\nexport const MdlpAPI = {\r\n\r\n    getRequest10311_10300(docid) {\r\n        return jobInstance.get(`getrequestfrom10311/${docid}`, {\r\n            responseType: 'blob',\r\n        }).then(response => {\r\n            return response;\r\n        })\r\n    },\r\n\r\n    getResponse10311_10300(docid) {\r\n        return jobInstance.get(`getresponsefrom10311/${docid}`, {\r\n            responseType: 'blob',\r\n        }).then(response => {\r\n            return response;\r\n        })\r\n    },\r\n\r\n    getReportResponse(docid) {\r\n        return jobInstance.get(`getresponse/${docid}`, {\r\n            responseType: 'blob',\r\n        }).then(response => {\r\n            return response;\r\n        })\r\n    },\r\n\r\n    getReportRequest(docid) {\r\n        return jobInstance.get(`getrequest/${docid}`, {\r\n            responseType: 'blob',\r\n        }).then(response => {\r\n            return response;\r\n        })\r\n    },\r\n}\r\n\r\n\r\nexport const reportsAPI = {\r\n\r\n    getMapReport(jobid) {\r\n        return jobInstance.get(`jobs/${jobid}/mapreport`, {\r\n            responseType: 'blob',\r\n        }).then(response => {\r\n            return response;\r\n        })\r\n    },\r\n    getDetailedJob(jobid) {\r\n        return jobInstance.get(`jobs/${jobid}/detailedjob`, {\r\n            responseType: 'blob',\r\n        }).then(response => {\r\n            return response;\r\n        })\r\n    },\r\n    getMdlpCount(jobid) {\r\n        return jobInstance.get(`jobs/${jobid}/mdlpcount`).then(response => {\r\n            return response;\r\n        })\r\n    },\r\n    getTWCount(jobid) {\r\n        return jobInstance.get(`jobs/${jobid}/tracewaycount`).then(response => {\r\n            return response;\r\n        })\r\n    },\r\n    sendMessageToMDLPAPI(document_id, document_receipt) {\r\n        const sendMessageToMDLPInstance = axios.create({\r\n            baseURL: \"http://localhost:8080/\",\r\n            params: {document_id, document_receipt}\r\n        });\r\n        return sendMessageToMDLPInstance.post(`jobs/sendmessagetomdlp`).then(response => {\r\n            return response;\r\n        })\r\n    },\r\n\r\n}\r\n\r\n\r\nexport const jobsAPI = {\r\n    getAllJobs(typeOfJobs, value) {\r\n        switch (typeOfJobs) {\r\n            case \"allJobs\": {\r\n                return jobInstance.get(\"jobs\").then(response => {\r\n                    return response.data;\r\n                })\r\n            }\r\n            case \"closedJobs\": {\r\n                return jobInstance.get(\"closed\").then(response => {\r\n                    return response.data;\r\n                })\r\n            }\r\n            case \"suspendJobs\": {\r\n                return jobInstance.get(\"suspend\").then(response => {\r\n                    return response.data;\r\n                })\r\n            }\r\n            case \"codeswaiting\": {\r\n                return jobInstance.get(\"codeswaiting\").then(response => {\r\n                    return response.data;\r\n                })\r\n            }\r\n\r\n            case \"batch\": {\r\n                return jobInstance.get(`batch?batch=${value}`).then(response => {\r\n                    debugger\r\n                    return response.data;\r\n                })\r\n            }\r\n            case \"jobid\": {\r\n                return jobInstance.get(`jobid?jobid=${value}`).then(response => {\r\n                    return response.data;\r\n                })\r\n            }\r\n            case \"jobName\": {\r\n                return jobInstance.get(`jobname?jobname=${value}`).then(response => {\r\n                    return response.data;\r\n                })\r\n            }\r\n        }\r\n    },\r\n    getJobDetails(jobid) {\r\n        return jobInstance.get(`jobs/${jobid}`).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n\r\n    getSuzAPI() {\r\n        return jobInstance.get(`suz`).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n    getReportDetails(jobid, xmltype) {\r\n        return jobInstance.get(`jobs/${jobid}/${xmltype}`).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n    getAllMistakes() {\r\n        return jobInstance.get(\"mistakes\").then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n\r\n    setRejectJob(jobid) {\r\n        return jobInstance.get(`jobs/${jobid}/reject`).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n\r\n    setSuspendJob(jobid) {\r\n        return jobInstance.get(`jobs/${jobid}/suspend`).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n\r\n    setUIDGeneratedJob(jobid) {\r\n        return jobInstance.get(`jobs/${jobid}/uidgenerated`).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n\r\n    resendReportAPI(jobid, id) {\r\n        return jobInstance.get(`jobs/${jobid}/${id}/resend`).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n\r\n    setReportStatus7API(jobid, id) {\r\n        return jobInstance.get(`jobs/${jobid}/${id}/status7`).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n\r\n    resendReport9151API(jobid, docid) {\r\n        return jobInstance.get(`jobs/${jobid}/${docid}/resend9151`).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n\r\n\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"obsolete method.\")\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const securityAPI = {\r\n    getCaptcha() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\redux\\users_selectors.js",["263"],"import {AppStateType} from \"./redux_store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getJobsSelector = (state) => {\r\n    return state.usersPage.jobs;\r\n}\r\n\r\nconst getSuzSelector = (state) => {\r\n    return state.usersPage.suz;\r\n}\r\n\r\nconst getMistakesSelector = (state) => {\r\n    return state.usersPage.mistakes;\r\n}\r\n\r\nconst getJobDetailsSelector = (state) => {\r\n    return state.usersPage.jobdetails;\r\n}\r\n\r\nconst getReportDetailsSelector = (state) => {\r\n    return state.usersPage.reportdetails;\r\n}\r\n\r\n\r\n\r\n\r\nexport const getAllJobs = createSelector(getJobsSelector,\r\n    (jobs) =>{\r\n        return jobs.filter(() => true);\r\n    })\r\n\r\nexport const getSuz = createSelector(getSuzSelector,\r\n    (suz) =>{\r\n        if(suz===null)\r\n            return null\r\n        else\r\n        return suz.filter(() => true);\r\n    })\r\n\r\nexport const getAllMistakesSelector = createSelector(getMistakesSelector,\r\n    (mistakes) =>{\r\n        return mistakes.filter(() => true);\r\n    })\r\n\r\nexport const getAllJobDetails = createSelector(getJobDetailsSelector,\r\n    (jobs) =>{\r\n        return jobs.filter(() => true);\r\n    })\r\n\r\nexport const getAllReportDetails = createSelector(getReportDetailsSelector,\r\n    (reportdetails) =>{\r\n    if(reportdetails===null)\r\n        return null\r\n        else\r\n        return reportdetails.filter(() => true);\r\n    })\r\n\r\n\r\nexport const getTotalUsersCount = (state) =>{\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getJobStatus = (state) =>{\r\n    return state.usersPage.jobstatus;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\common\\FormControls\\FormsControls.js",["264"],"import React from 'react'\r\nimport styles from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nexport const FormControl = ({input, meta: {touched, error, children}, ...props}) => {\r\n\r\n    const hasError = error && touched;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (<FormControl {...props}><textarea{...input}{...restProps} placeholder={props.placeholder}/></FormControl>)\r\n}\r\n\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (<FormControl {...props}><input {...input}{...restProps} /></FormControl>)\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n    <Field placeholder={placeholder} name={name}\r\n           validate={validators}\r\n           component={component}\r\n        {...props}/>\r\n        {text}\r\n    </div>\r\n)\r\n\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\utils\\validators\\validators.js",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Mistakes\\Mistakes.jsx",["265"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport s from \"./mistakes.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet Mistakes = ({mistakes, ...props}) => {\r\n\r\n    return <div>\r\n\r\n            <div className=\"alert mt-1 bg-dark\">\r\n                <div className=\"row itemsalign text-warning\">\r\n\r\n                    <div className=\"col-sm-1\">\r\n                        <p><b>JobID:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b>XMLType:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b>Статус:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b>Ответ:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b>Идентификатор:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b>Время:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-2\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        {mistakes.map(m =>\r\n            <div className=\"mainContainers border border-secondary rounded mt-2 mb-3\" key={m.document_id}>\r\n\r\n                <div className=\"row text-white itemsalign\">\r\n\r\n                    <div className=\"col-sm-1 itemsalign\">\r\n                        <span> {m.jobid}</span>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm itemsalign\">\r\n                        <span> {m.xmltype}</span>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm itemsalign\">\r\n                        <span> {m.transactionstatus}</span>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm itemsalign\">\r\n                        <span> {m.document_receipt}</span>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm itemsalign\">\r\n                        <span> {m.document_id}</span>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm itemsalign\">\r\n                        <span> {m.updateddate}</span>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-2 itemsalign\" align=\"center\">\r\n                        <NavLink to={`/reportdetails/` + m.jobid + \"/\" + m.xmltype}\r\n                                 className=\"btn btn-warning shadowforbutton\">\r\n                            <b>Детальнее</b></NavLink>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )}\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default Mistakes;\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Users\\Jobs.jsx",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Suz\\Suz.jsx",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Dialogs\\Dialogs.jsx",["266"],"import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d =>  <DialogItem name={d.name} key={d.id} id={d.id} ava={d.ava}/>);\r\n\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let newMessageBody = state.newMessageText;\r\n\r\n    let addNewMessage = (values) =>{\r\n        props.onSendMessageClick(values.newMessageBody);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsitems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div> {messagesElements}</div>\r\n\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newMessageBody\"\r\n                      validate={[required, maxLength50]} placeholder=\"Enter your message\"/>\r\n             </div>\r\n            <div> <button>Отправить</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\n\r\n\r\n\r\nexport default Dialogs;","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Administration\\Administration.jsx",["267","268","269","270","271","272","273","274"],"import React from 'react';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet Administration = ({reportdetails, ...props}) => {\r\n\r\n    return <div>\r\n\r\n        <div className=\"col-md-8 col-lg-10 content-container\">\r\n\r\n            <div>\r\n\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-sm-4\">\r\n\r\n                        <div className=\"ml-3\">\r\n                            <NavLink to=\"/suz\">\r\n                                <button type=\"submit\"\r\n                                        className=\"m-2 btn btn-warning shadowforbutton\"\r\n                                        data-dismiss=\"modal\">\r\n                                    <b>СУЗ</b>\r\n                                </button>\r\n                            </NavLink>\r\n\r\n                            <NavLink to=\"/codeswaiting\">\r\n                                <button type=\"submit\"\r\n                                        className=\"m-2 btn btn-warning shadowforbutton\"\r\n                                        data-dismiss=\"modal\">\r\n                                    <b>В ожидании кодов</b>\r\n                                </button>\r\n                            </NavLink>\r\n                        </div>\r\n\r\n\r\n                        <form method=\"post\" action=\"@{/json}\">\r\n\r\n                            <div className=\"form-label-group mt-3 ml-3 \">\r\n                                <label className=\"text-light\">Работа с SSCC: </label>\r\n                                <input type=\"text\" name=\"SSCC\" className=\"form-control shadowforbutton\"\r\n                                       placeholder=\"SSCC: \" required=\"\"\r\n                                       autoFocus=\"\" value=\"${sscc}\"/>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 ml-3\">\r\n                                <button formaction=\"@{/json}\" formMethod=\"post\" type=\"submit\"\r\n                                        className=\"m-2 btn btn-warning shadowforbutton\" data-dismiss=\"modal\"><b>Создать\r\n                                    JSON</b>\r\n                                </button>\r\n                                <button formaction=\"@{/mdlp}\" formMethod=\"post\" type=\"submit\"\r\n                                        className=\"m-2 btn btn-warning shadowforbutton\" data-dismiss=\"modal\"><b>Запрос в\r\n                                    МДЛП</b>\r\n                                </button>\r\n                                <button formaction=\"@{/tw}\" formMethod=\"post\" type=\"submit\"\r\n                                        className=\"m-2 btn btn-warning shadowforbutton\" data-dismiss=\"modal\"><b>Запрос в\r\n                                    TW</b></button>\r\n                            </div>\r\n\r\n\r\n                           {/* <div if=\"${jid}\" className=\"mt-3 ml-3\">\r\n                                <a href=\"'/jobs/' + ${jid}\" type=\"submit\"\r\n                                   className=\"m-2 btn btn-warning shadowforbutton\" data-dismiss=\"modal\" text=${jid}\r\n                                   style=\"font-weight:bold\"></a>\r\n                            </div>*/}\r\n\r\n                        </form>\r\n\r\n\r\n                        <div className=\"mt-3 ml-3\">\r\n                            <div>\r\n                                <span text=\"${code}\" className=\"text-white bg-dark\"/> <br/>\r\n                                <span text=\"${grpcnt}\" className=\"text-white bg-dark\"/>\r\n                                <span text=\"${indcnt}\" className=\"text-white bg-dark\"/>\r\n\r\n                            </div>\r\n                            <div each=\"el : ${array}\">\r\n                                <span text=\"${el}\" className=\"text-white bg-dark\"/><br/>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-sm-6\">\r\n                        <form action=\"@{/sendjson}\" method=\"post\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"textarea\"><h2 className=\"text-light\">Результат:</h2></label>\r\n                                <textarea id=\"textarea\" name=\"textarea\" text=\"${json}\"\r\n                                          className=\"form-control shadowforbutton\"\r\n                                          rows=\"20\">\r\n                                </textarea>\r\n                            </div>\r\n                            <div className=\"mt-3 mb-2\">\r\n                                <button type=\"submit\" className=\"btn btn-warning shadowforbutton\" data-dismiss=\"modal\">\r\n                                    <b>Отправить в\r\n                                        TraceWay</b>\r\n                                </button>\r\n                            </div>\r\n\r\n                        </form>\r\n\r\n                        <label htmlFor=\"textarea\"><h2 className=\"text-light \">Ответ TraceWay:</h2></label>\r\n                        <textarea id=\"twresponse\" text=\"${twresponse}\" className=\"form-control shadowforbutton\"\r\n                                  rows=\"10\">\r\n                                </textarea>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n    </div>\r\n\r\n    </div>\r\n}\r\n\r\n\r\nexport default Administration;\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\ReportDetails\\ReportDetails.jsx",["275"],"import React from 'react';\r\nimport $ from \"jquery\"\r\n\r\n\r\nlet ReportDetails = ({reportdetails, ...props}) => {\r\n\r\n    if (reportdetails.length > 0) {\r\n        return <div>\r\n            <div className=\"col-md-8 col-lg-10 content-container mt-2\">\r\n\r\n                <div>\r\n                    <div className=\"row textsize\">\r\n\r\n                        <div className=\"col-sm-1\">\r\n                            <p><b className=\"text-warning\">JobID:</b></p>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm\">\r\n                            <p><b className=\"text-warning\">XMLType:</b></p>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm\">\r\n                            <p><b className=\"text-warning\">Статус:</b></p>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm\">\r\n                            <p><b className=\"text-warning\">Ответ:</b></p>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm\">\r\n                            <p><b className=\"text-warning\">Идентификатор:</b></p>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm\">\r\n                            <p><b className=\"text-warning\">Время:</b></p>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm\">\r\n                            <p><b className=\"text-warning\">Request:</b></p>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm\">\r\n                            <p><b className=\"text-warning\">Response:</b></p>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                {reportdetails.map(m =>\r\n                    <div className=\"mainContainers border border-secondary rounded mt-2 mb-3\" key={m.document_id}>\r\n\r\n\r\n                        <div className=\"row text-white\">\r\n\r\n                            <div className=\"col-sm-1 itemsalign \">\r\n                                <span> {m.jobid}</span>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm itemsalign\">\r\n                                <span> {m.xmltype}</span>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm itemsalign\">\r\n                                <span> {m.transactionstatus}</span>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm itemsalign\">\r\n                                <span> {m.document_receipt}</span>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm itemsalign\">\r\n                                <span> {m.document_id}</span>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm itemsalign\">\r\n                                <span> {m.updateddate}</span>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm itemsalign\">\r\n                                <button onClick={() => props.reportRequest(m.document_id)}\r\n                                        className=\"ml-3 btn btn-warning btn-sm shadowforbutton\"><b> Скачать отчёт</b>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"col-sm itemsalign\">\r\n                                <button onClick={() => props.reportResponse(m.document_id)}\r\n                                        className=\"ml-2 btn btn-warning btn-sm shadowforbutton\"><b> Скачать ответ</b>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                )}\r\n\r\n\r\n                <div className=\"row\">\r\n\r\n\r\n                    <div className=\"col-sm-6\">\r\n\r\n                        <p><b className=\"text-white alert m-1 bg-dark\">Действия с отчётом:</b></p>\r\n\r\n                        {reportdetails.map(m =>\r\n                            <div className=\"row alert m-1 bg-dark\">\r\n                                <div className=\"ml-2\">\r\n\r\n\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-append\">\r\n                                            <div className=\"col-sm\" align=\"center\">\r\n                                                <button onClick={() =>\r\n                                                    props.resendReport(m.jobid, m.id)\r\n                                                }\r\n                                                        className=\"btn btn-warning btn-sm shadowforbutton\" id=\"elem1\">\r\n                                                    <b>Переотправить</b>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"ml-2\">\r\n\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-append\">\r\n                                            <div className=\"col-sm\" align=\"center\">\r\n                                                <button onClick={() =>\r\n                                                    props.setReportStatus7(m.jobid, m.id)\r\n                                                }\r\n                                                        className=\"btn btn-warning btn-sm shadowforbutton\" id=\"elem2\">\r\n                                                    <b>Статус\r\n                                                        - успешно</b>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"ml-2\">\r\n\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-append\">\r\n                                            <div className=\"col-sm\" align=\"center\">\r\n                                                <button onClick={() => {\r\n                                                        props.resendReport9151(m.jobid, m.document_id);\r\n                                                }}\r\n                                                        className=\"btn btn-warning btn-sm shadowforbutton\" id=\"elem3\">\r\n                                                    <b>Переотправить\r\n                                                        9151</b>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        )}\r\n\r\n                        <div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    {(reportdetails[0].transactionstatus !== \"7 – Успешно получена квитанция\") &&\r\n                    <div className=\"col-sm-6\">\r\n\r\n                        <p><b className=\"text-white alert m-1 bg-dark\">Отправка письма в МДЛП:</b></p>\r\n\r\n                        {reportdetails.map(m =>\r\n                            <div className=\"row alert m-1 bg-dark\">\r\n                                <div className=\"ml-2\">\r\n\r\n\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-append\">\r\n                                            <div className=\"col-sm\" align=\"center\">\r\n                                                <button\r\n                                                    onClick={() => props.sendMessageToMDLP(m.document_id, m.document_receipt)}\r\n                                                    className=\"btn btn-warning btn-sm shadowforbutton\">\r\n                                                    <b>Отправить</b>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                    </div>\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    } else return <div>\r\n        Загрузка\r\n    </div>\r\n}\r\n\r\n\r\nexport default ReportDetails;\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\JobDetails\\JobDetails.jsx",["276","277","278","279","280","281","282"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from \"jquery\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet JobDetails = ({jobdetails, twcount, mdlpcount, ...props}) => {\r\n    debugger\r\n    if (jobdetails.length === 4) {\r\n        return <div>\r\n\r\n            <div className=\"alert\">\r\n                <div className=\"row textsize\">\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b className=\"text-warning\">Наименование:</b> <span className=\"text-white bg-dark\">\r\n                            {props.props.jobdetails[3][0].product_name}\r\n                        </span></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b className=\"text-warning\">JobName:</b> <span className=\"text-white bg-dark\">\r\n                                            {props.props.jobdetails[3][0].jobname}\r\n                        </span></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b className=\"text-warning\">Статус работы:</b> <span className=\"text-white bg-dark\">\r\n                                            {props.props.jobdetails[3][0].jobstatus}\r\n                        </span></p>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"alert mt-1 bg-dark\">\r\n                <div className=\"row itemsalign text-warning\">\r\n\r\n                    <div className=\"col-sm-1\">\r\n                        <p><b>JobID:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b>XMLType:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b>Статус:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b>Ответ:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b>Идентификатор:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm\">\r\n                        <p><b>Время:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-2\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {jobdetails.length > 0 && jobdetails[0].map(m =>\r\n                <div className=\"mainContainers border border-secondary rounded mt-2 mb-3\" key={m.document_id}>\r\n\r\n                    <div className=\"row text-white itemsalign\">\r\n\r\n                        <div className=\"col-sm-1 itemsalign\">\r\n                            <span> {m.jobid}</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm itemsalign\">\r\n                            <span> {m.xmltype}</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm itemsalign\">\r\n                            <span> {m.transactionstatus}</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm itemsalign\">\r\n                            <span> {m.document_receipt}</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm itemsalign\">\r\n                            <span> {m.document_id}</span>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm itemsalign\">\r\n                            <span> {m.updateddate}    </span>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2 itemsalign\" align=\"center\">\r\n                            <NavLink to={`/reportdetails/` + m.jobid + \"/\" + m.xmltype}\r\n                                     className=\"btn btn-warning shadowforbutton\">\r\n                                <b>Детальнее</b></NavLink>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-sm-4\">\r\n\r\n\r\n                    <p><b className=\"text-white alert m-1 bg-dark\">Отчёты по работе:</b></p>\r\n                    <div className=\"row alert m-1 bg-dark\">\r\n                        <div className=\"col\">\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"col-sm\" align=\"center\">\r\n                                        <button onClick={() => props.mapReport(props.props.jobdetails[3][0].jid)}\r\n                                                className=\"btn btn-warning  btn-sm but2 shadowforbutton\"\r\n                                                type=\"submit\"><b>Map Report</b>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"col-sm\" align=\"center\">\r\n                                        <button onClick={() => props.detailedJob(props.props.jobdetails[3][0].jid)}\r\n                                                className=\"btn btn-warning  btn-sm but2 shadowforbutton\"\r\n                                                type=\"submit\"><b>Detailed Job</b>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"mt-5\"><p><b className=\"text-white alert m-1\">Запрос общего количества в\r\n                        серии:</b></p>\r\n                    </div>\r\n\r\n                    <div className=\"row alert m-1 bg-dark \">\r\n                        <div className=\"col\">\r\n\r\n\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"col-sm\" align=\"center\">\r\n                                        <button\r\n                                            onClick={() => props.props.getCountMDLP(props.props.jobdetails[3][0].jid)}\r\n                                            className=\"btn btn-warning  btn-sm but2 shadowforbutton\"\r\n                                        ><b>В МДЛП</b>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-9 mt-3\">\r\n                                    <span className=\"form-control shadowforbutton\" type=\"but2\">\r\n                                        <b> {mdlpcount}</b>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n\r\n\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"col-sm\" align=\"center\">\r\n                                        <button onClick={() => props.props.getCountTW(props.props.jobdetails[3][0].jid)}\r\n                                                className=\"btn btn-warning  btn-sm but2 shadowforbutton\"\r\n                                        ><b>В TraceWay</b>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"col-sm-9 mt-3\">\r\n                                    <span className=\"form-control shadowforbutton\">\r\n                                        <b> {twcount}</b>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"col-sm-2\">\r\n                </div>\r\n\r\n\r\n                <div className=\"col-sm-4\">\r\n\r\n\r\n                    <p><b className=\"text-white alert m-1 bg-dark\">Изменение статуса работы:</b></p>\r\n                    <div className=\"row alert m-1 bg-dark\">\r\n                        <div className=\"col\">\r\n                            <div className=\"input-group blocktext\">\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"col-sm\" align=\"center\">\r\n                                        <button\r\n                                            onClick={() => props.props.getRejectJob(props.props.jobdetails[3][0].jid)}\r\n                                            className=\"btn btn-warning btn-sm but2 shadowforbutton\" id=\"elem1\">\r\n                                            <b>\r\n                                                Reject </b>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n\r\n                            <div className=\"input-group blocktext\">\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"col-sm\" align=\"center\">\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                if (props.props.jobdetails[0][0]) {\r\n                                                    if (props.props.jobdetails[0][0].transactionstatus === \"7 – Успешно получена квитанция\") {\r\n                                                        props.props.getUIDGeneratedJob(props.props.jobdetails[3][0].jid);\r\n                                                    }\r\n                                                } else {\r\n                                                    alert(\"Коды еще не получены!\");\r\n                                                }\r\n                                            }\r\n                                            }\r\n                                            className=\"btn btn-warning btn-sm but2 shadowforbutton\" id=\"elem2\">\r\n                                            <b>UIDGenerated</b>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col \">\r\n\r\n                            <div className=\"input-group blocktext\">\r\n                                <div className=\"input-group-append\">\r\n                                    <div className=\"col-sm\" align=\"center\">\r\n                                        <button\r\n                                            onClick={() => props.props.getSuspendJob(props.props.jobdetails[3][0].jid)}\r\n                                            className=\"btn btn-warning btn-sm but2 shadowforbutton\" id=\"elem3\">\r\n                                            <b>Suspend</b>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        ;\r\n                    </div>\r\n\r\n                    {jobdetails[2] != null > 0 && (<div className=\"mt-5 mb-3\"><p><b\r\n                            className=\"text-white alert m-1 bg-dark\">Завершение\r\n                            упаковки (отчёт\r\n                            10311):</b></p></div>\r\n                    )\r\n                    }\r\n\r\n                    <div className=\"bg-dark\">\r\n\r\n                        {jobdetails.length > 0 && jobdetails[2].map(m =>\r\n                            <div className=\"row ml-1\">\r\n\r\n                                <div className=\"col-sm\">\r\n                                    <span name=\"document_id\" className=\"text-white bg-dark\">{m.reportid} </span>\r\n\r\n                                    <div className=\"m-2\">\r\n                                        <button onClick={() => props.request10311_10300(m.reportid)}\r\n                                                className=\"ml-2 btn btn-warning btn-sm button shadowforbutton\">\r\n                                            <b> Скачать\r\n                                                отчёт</b></button>\r\n\r\n                                        <button onClick={() => props.response10311_10300(m.reportid)}\r\n                                                className=\"ml-2 btn btn-warning btn-sm button shadowforbutton\">\r\n                                            <b> Скачать\r\n                                                ответ</b></button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )}\r\n\r\n                    </div>\r\n\r\n\r\n                    {jobdetails[1] != null > 0 && (<div className=\"mt-5 mb-3\"><p><b\r\n                        className=\"text-white alert m-1 bg-dark\">Эмиссия кодов маркировки (отчёт\r\n                        10300):</b></p></div>)\r\n                    }\r\n                    {jobdetails.length > 0 && jobdetails[1].map(m =>\r\n                        <div className=\"row ml-1 bg-dark\">\r\n\r\n                            <div className=\"col-sm\">\r\n                                <span name=\"document_id\" className=\"text-white bg-dark\"> {m.orderid}</span>\r\n\r\n                                <div className=\"m-2\">\r\n                                    <button onClick={() => props.request10311_10300(m.orderid)}\r\n                                            className=\"ml-2 btn btn-warning btn-sm button shadowforbutton\"><b> Скачать\r\n                                        отчёт</b></button>\r\n\r\n                                    <button onClick={() => props.response10311_10300(m.orderid)}\r\n                                            className=\"ml-2 btn btn-warning btn-sm button shadowforbutton\"><b> Скачать\r\n                                        ответ</b></button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    } else return <div>\r\n        Загрузка\r\n    </div>\r\n}\r\n\r\n\r\nexport default JobDetails;\r\n","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\types\\types.ts",[],["283","284"],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\common\\Paginator\\Paginator.tsx",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Dialogs\\Message\\Message.jsx",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",["285","286"],"import React from 'react'\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            posts: state.profilePage.posts,\r\n            newPostText: state.profilePage.newPostText\r\n        }\r\n    }\r\n\r\n    const mapDispatchToProps = (dispatch) => {\r\n        return {\r\n           addPost: (newPostText)=>{dispatch(addPostActionCreator(newPostText));},\r\n        }\r\n    }\r\n\r\n    const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["287"],"import React, {useState} from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloder from \"../../common/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/m1000x1000.jpg'\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloder/>\r\n    }\r\n    const mainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit =  (formData) => {\r\n    saveProfile(formData).then(() =>{setEditMode(false)});\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.large || userPhoto} className={s.mainPhoto} alt=\"\"/>\r\n            {!isOwner && <input type={\"file\"} onChange={mainPhotoSelected}/>}\r\n\r\n            {editMode ? <ProfileDataForm initialValues={profile} onSubmit={onSubmit} profile={profile}/> :\r\n                <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {\r\n                    setEditMode(true) }}/>}\r\n\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {!isOwner && <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>}\r\n        <div>\r\n            <b> Full name:</b> {profile.fullName}\r\n        </div>\r\n\r\n        <div>\r\n            <b> About me:</b> {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n        </div>\r\n\r\n        <div>\r\n            <b> My professional skills:</b> {profile.lookingForAJobDescription}\r\n        </div>\r\n\r\n        <div>\r\n            <b> About me:</b> {profile.aboutMe}\r\n        </div>\r\n\r\n        <div>\r\n            <b> Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact contactTitle={key} key={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",["288"],"import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return <div className={s.dialog + ' ' + s.active}  >\r\n        <img className={s.avatarka} src={props.ava}></img>\r\n        <NavLink to={'/dialogs/' + props.id}> {props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\n\r\nexport default DialogItem;","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",["289"],"import React, {ChangeEvent} from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\ntype StateType = {\r\neditMode: boolean\r\n    status: string\r\n}\r\n\r\nclass ProfileStatus extends React.Component<PropsType, StateType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: StateType) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true}\r\n                           onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\nexport default ProfileStatus;","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",["290"],"import React from 'react'\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormsControls\";\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nfunction AddNewPostForm(props) {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} placeholder=\"Post message...\" name=\"newPostText\" validate={[required, maxLength]}/>\r\n        </div>\r\n        <button>App post</button>\r\n    </form>;\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPOst\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements =\r\n        props.posts.map(p => <Post  key={p.id} message={p.message} likes={p.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (<div className={s.postsBlock}>\r\n            <h3> My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n});\r\n\r\nexport default MyPosts;","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",["291"],"import React from 'react'\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return <div className={s.item}>\r\n        <img src='https://miro.medium.com/max/1200/1*mk1-6aYaf_Bes1E3Imhc0A.jpeg'></img>\r\n               <h1> {props.message}</h1>\r\n                <div>\r\n            <span>Like - {props.likes}</span>\r\n        </div>\r\n    </div>\r\n\r\n};\r\nexport default Post;","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\Interceptors.js",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\Login.js",[],"C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\Dashboard.js",["292","293"],"import React, { Component } from \"react\";\r\n\r\nclass dashboard extends Component {\r\n    handleLogout() {\r\n        localStorage.clear();\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>WELCOME TO DASHBOARD</h1>\r\n\r\n                <a\r\n                    href=\"javascript:void(0);\"\r\n                    onClick={this.handleLogout}\r\n                    className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\">\r\n                    <i className=\"ti-power-off mR-10\"></i>\r\n                    <span style={{ color: \"white\" }}>Logout</span>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default dashboard;","C:\\Users\\vla_o\\WebstormProjects\\React-Project\\src\\reportWebVitals.js",[],{"ruleId":"294","severity":1,"message":"295","line":21,"column":8,"nodeType":"296","messageId":"297","endLine":21,"endColumn":11},{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"294","severity":1,"message":"302","line":12,"column":8,"nodeType":"296","messageId":"297","endLine":12,"endColumn":15},{"ruleId":"294","severity":1,"message":"303","line":14,"column":8,"nodeType":"296","messageId":"297","endLine":14,"endColumn":17},{"ruleId":"294","severity":1,"message":"304","line":19,"column":8,"nodeType":"296","messageId":"297","endLine":19,"endColumn":13},{"ruleId":"294","severity":1,"message":"305","line":23,"column":7,"nodeType":"296","messageId":"297","endLine":23,"endColumn":23},{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","replacedBy":"301"},{"ruleId":"294","severity":1,"message":"306","line":108,"column":17,"nodeType":"296","messageId":"297","endLine":108,"endColumn":25},{"ruleId":"294","severity":1,"message":"306","line":119,"column":17,"nodeType":"296","messageId":"297","endLine":119,"endColumn":25},{"ruleId":"294","severity":1,"message":"306","line":130,"column":17,"nodeType":"296","messageId":"297","endLine":130,"endColumn":25},{"ruleId":"307","severity":1,"message":"308","line":6,"column":9,"nodeType":"309","endLine":6,"endColumn":31},{"ruleId":"310","severity":1,"message":"311","line":1,"column":18,"nodeType":"296","messageId":"297","endLine":1,"endColumn":29},{"ruleId":"310","severity":1,"message":"312","line":6,"column":6,"nodeType":"296","messageId":"297","endLine":6,"endColumn":22},{"ruleId":"294","severity":1,"message":"313","line":2,"column":9,"nodeType":"296","messageId":"297","endLine":2,"endColumn":26},{"ruleId":"294","severity":1,"message":"314","line":2,"column":28,"nodeType":"296","messageId":"297","endLine":2,"endColumn":39},{"ruleId":"294","severity":1,"message":"315","line":6,"column":9,"nodeType":"296","messageId":"297","endLine":6,"endColumn":25},{"ruleId":"294","severity":1,"message":"316","line":6,"column":27,"nodeType":"296","messageId":"297","endLine":6,"endColumn":37},{"ruleId":"294","severity":1,"message":"317","line":1,"column":16,"nodeType":"296","messageId":"297","endLine":1,"endColumn":24},{"ruleId":"294","severity":1,"message":"314","line":2,"column":9,"nodeType":"296","messageId":"297","endLine":2,"endColumn":20},{"ruleId":"294","severity":1,"message":"316","line":5,"column":9,"nodeType":"296","messageId":"297","endLine":5,"endColumn":19},{"ruleId":"307","severity":1,"message":"308","line":29,"column":29,"nodeType":"309","endLine":31,"endColumn":210},{"ruleId":"294","severity":1,"message":"313","line":2,"column":9,"nodeType":"296","messageId":"297","endLine":2,"endColumn":26},{"ruleId":"294","severity":1,"message":"314","line":2,"column":28,"nodeType":"296","messageId":"297","endLine":2,"endColumn":39},{"ruleId":"294","severity":1,"message":"315","line":6,"column":9,"nodeType":"296","messageId":"297","endLine":6,"endColumn":25},{"ruleId":"294","severity":1,"message":"316","line":6,"column":27,"nodeType":"296","messageId":"297","endLine":6,"endColumn":37},{"ruleId":"294","severity":1,"message":"318","line":1,"column":8,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"319","line":4,"column":60,"nodeType":"296","messageId":"297","endLine":4,"endColumn":69},{"ruleId":"294","severity":1,"message":"320","line":9,"column":9,"nodeType":"296","messageId":"297","endLine":9,"endColumn":15},{"ruleId":"294","severity":1,"message":"321","line":10,"column":9,"nodeType":"296","messageId":"297","endLine":10,"endColumn":17},{"ruleId":"322","severity":1,"message":"323","line":130,"column":9,"nodeType":"324","messageId":"325","endLine":168,"endColumn":10},{"ruleId":"294","severity":1,"message":"326","line":1,"column":9,"nodeType":"296","messageId":"297","endLine":1,"endColumn":21},{"ruleId":"294","severity":1,"message":"327","line":4,"column":9,"nodeType":"296","messageId":"297","endLine":4,"endColumn":17},{"ruleId":"294","severity":1,"message":"328","line":3,"column":8,"nodeType":"296","messageId":"297","endLine":3,"endColumn":9},{"ruleId":"294","severity":1,"message":"329","line":18,"column":9,"nodeType":"296","messageId":"297","endLine":18,"endColumn":23},{"ruleId":"330","severity":1,"message":"331","line":44,"column":59,"nodeType":"332","messageId":"333","endLine":44,"endColumn":68},{"ruleId":"330","severity":1,"message":"331","line":74,"column":44,"nodeType":"332","messageId":"333","endLine":74,"endColumn":53},{"ruleId":"330","severity":1,"message":"331","line":75,"column":44,"nodeType":"332","messageId":"333","endLine":75,"endColumn":55},{"ruleId":"330","severity":1,"message":"331","line":76,"column":44,"nodeType":"332","messageId":"333","endLine":76,"endColumn":55},{"ruleId":"330","severity":1,"message":"331","line":79,"column":39,"nodeType":"332","messageId":"333","endLine":79,"endColumn":54},{"ruleId":"330","severity":1,"message":"331","line":80,"column":44,"nodeType":"332","messageId":"333","endLine":80,"endColumn":51},{"ruleId":"330","severity":1,"message":"331","line":93,"column":78,"nodeType":"332","messageId":"333","endLine":93,"endColumn":87},{"ruleId":"330","severity":1,"message":"331","line":108,"column":56,"nodeType":"332","messageId":"333","endLine":108,"endColumn":71},{"ruleId":"294","severity":1,"message":"334","line":2,"column":8,"nodeType":"296","messageId":"297","endLine":2,"endColumn":9},{"ruleId":"294","severity":1,"message":"334","line":3,"column":8,"nodeType":"296","messageId":"297","endLine":3,"endColumn":9},{"ruleId":"335","severity":1,"message":"336","line":267,"column":36,"nodeType":"337","messageId":"338","endLine":267,"endColumn":38},{"ruleId":"339","severity":1,"message":"340","line":267,"column":36,"nodeType":"337","messageId":"341","endLine":267,"endColumn":38},{"ruleId":"339","severity":1,"message":"340","line":267,"column":44,"nodeType":"337","messageId":"341","endLine":267,"endColumn":45},{"ruleId":"335","severity":1,"message":"336","line":301,"column":36,"nodeType":"337","messageId":"338","endLine":301,"endColumn":38},{"ruleId":"339","severity":1,"message":"340","line":301,"column":36,"nodeType":"337","messageId":"341","endLine":301,"endColumn":38},{"ruleId":"339","severity":1,"message":"340","line":301,"column":44,"nodeType":"337","messageId":"341","endLine":301,"endColumn":45},{"ruleId":"298","replacedBy":"342"},{"ruleId":"300","replacedBy":"343"},{"ruleId":"294","severity":1,"message":"318","line":1,"column":8,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"344","line":2,"column":31,"nodeType":"296","messageId":"297","endLine":2,"endColumn":61},{"ruleId":"294","severity":1,"message":"345","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":21},{"ruleId":"307","severity":1,"message":"308","line":7,"column":9,"nodeType":"309","endLine":7,"endColumn":53},{"ruleId":"310","severity":1,"message":"328","line":2,"column":8,"nodeType":"296","messageId":"297","endLine":2,"endColumn":9},{"ruleId":"346","severity":1,"message":"347","line":19,"column":1,"nodeType":"296","messageId":"348","endLine":19,"endColumn":15},{"ruleId":"307","severity":1,"message":"308","line":6,"column":9,"nodeType":"309","endLine":6,"endColumn":83},{"ruleId":"349","severity":1,"message":"350","line":14,"column":17,"nodeType":"309","endLine":17,"endColumn":72},{"ruleId":"351","severity":1,"message":"352","line":15,"column":26,"nodeType":"332","messageId":"353","endLine":15,"endColumn":47},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["354"],"no-negated-in-lhs",["355"],"'Navbarr' is defined but never used.","'Preloader' is defined but never used.","'login' is defined but never used.","'ProfileContainer' is assigned a value but never used.","'jobsData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'securityAPI' is defined but never used.","'InitialStateType' is defined but never used.","'requestJobDetails' is defined but never used.","'requestJobs' is defined but never used.","'getAllJobDetails' is defined but never used.","'getAllJobs' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","'setStatus' is defined but never used.","'render' is defined but never used.","'Redirect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'AppStateType' is defined but never used.","'required' is defined but never used.","'s' is defined but never used.","'newMessageBody' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'$' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '!=' and '>'.","unexpectedMixedOperator",["354"],["355"],"'updateNewPostTextActionCreator' is defined but never used.","'ProfileStatus' is defined but never used.","no-func-assign","'AddNewPostForm' is a function.","isAFunction","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","unexpectedScriptURL","no-global-assign","no-unsafe-negation"]